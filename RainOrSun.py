#!/usr/bin/env python
# -*- coding : utf-8 -*-
"""
--------------------------------------------
@Time ： 12/19/2021 10:52 PM
@Auth : Andy yang
@File : RainOrSun.py
@IDE : PyCharm
@Email : quecheny@student.unimelb.edu.au
---------------------------------------------
"""
# wind数据
from WindPy import *
import time
import pandas as pd
import datetime
import timedelta
import numpy as np
import os
import glob
import plotly.figure_factory as ff
w.start()
# 定义wind接口输出函数，用来展示数据使用
def output_py(outdata):
    list1 = []
    if outdata.ErrorCode!=0:
        print('error code:'+str(outdata.ErrorCode)+'\n')
        return()
    for i in range(0,len(outdata.Data[0])):
        strTemp=''
        if len(outdata.Times)>1:
            strTemp=str(outdata.Times[i])+' '
        for k in range(0, len(outdata.Fields)):
            strTemp=strTemp+str(outdata.Data[k][i])+' '
        list1.append(strTemp)
    return list1

# 用于读取wss并转换成dataframe数据
def data_capture(stocks):
    temp = pd.DataFrame(output_py(w.wss(stocks, "pct_chg,mkt_cap_CSRC",str("tradeDate="+tod+";cycle=D;unit=1"))))
    temp = pd.DataFrame(temp[0].str.split(' ',1).tolist(), columns = ['涨跌幅','总市值'])
    return temp

# 数值str to float
def type_change(df):
    df["涨跌幅"] = pd.to_numeric(df["涨跌幅"], downcast="float")
    df["总市值"] = pd.to_numeric(df["总市值"], downcast="float")
    return df

# 定义一个方法将一维数据转换成2d-array数组
def to_matrix(l, n):
    return [l[i:i+n] for i in range(0, len(l), n)]


## 设置当日时间，按照wind时间格式
# tod = datetime.datetime.strftime(datetime.datetime.now(),'%Y%m%d')
## 或者手动设置
tod = str(input("input a time, following %y%m%d: "))

FiveG = data_capture("000063.SZ,000070.SZ,000156.SZ,000665.SZ,000889.SZ,000917.SZ,000938.SZ,000988.SZ,002023.SZ,002093.SZ,002138.SZ,002194.SZ,002229.SZ,002236.SZ,002238.SZ,002268.SZ,002281.SZ,002313.SZ,002364.SZ,002384.SZ,002396.SZ,002446.SZ,002463.SZ,002465.SZ,002491.SZ,002544.SZ,002547.SZ,002792.SZ,002796.SZ,002815.SZ,002848.SZ,002885.SZ,002897.SZ,002902.SZ,002912.SZ,002916.SZ,002938.SZ,300025.SZ,300050.SZ,300123.SZ,300134.SZ,300136.SZ,300252.SZ,300308.SZ,300310.SZ,300319.SZ,300322.SZ,300366.SZ,300394.SZ,300493.SZ,300502.SZ,300548.SZ,300560.SZ,300565.SZ,300570.SZ,300590.SZ,300593.SZ,300597.SZ,300602.SZ,300615.SZ,300620.SZ,300635.SZ,300638.SZ,300782.SZ,600037.SH,600183.SH,600487.SH,600498.SH,600522.SH,600775.SH,600776.SH,600831.SH,600936.SH,600959.SH,600996.SH,601869.SH,601929.SH,603042.SH,603083.SH,603118.SH,603186.SH,603220.SH,603322.SH,603496.SH,603559.SH,603602.SH,603679.SH,603738.SH,603803.SH,688313.SH")

alibaba = data_capture("000156.SZ,000681.SZ,000701.SZ,000882.SZ,002027.SZ,002044.SZ,002094.SZ,002264.SZ,002268.SZ,002335.SZ,002373.SZ,002396.SZ,002401.SZ,002405.SZ,002415.SZ,002416.SZ,002442.SZ,002468.SZ,002488.SZ,002609.SZ,002664.SZ,002697.SZ,002707.SZ,002739.SZ,002813.SZ,300020.SZ,300027.SZ,300047.SZ,300096.SZ,300188.SZ,300212.SZ,300245.SZ,300248.SZ,300250.SZ,300253.SZ,300413.SZ,300465.SZ,300469.SZ,300663.SZ,300682.SZ,600055.SH,600104.SH,600130.SH,600233.SH,600271.SH,600446.SH,600476.SH,600604.SH,600662.SH,600690.SH,600718.SH,600757.SH,600797.SH,600896.SH,601116.SH,601127.SH,601216.SH,601688.SH,601828.SH,601866.SH,603001.SH,603881.SH")

baodaoticailiao = data_capture("002119.SZ,002129.SZ,002407.SZ,002409.SZ,002428.SZ,002430.SZ,002436.SZ,002549.SZ,002741.SZ,002916.SZ,003026.SZ,300054.SZ,300123.SZ,300236.SZ,300346.SZ,300395.SZ,300398.SZ,300429.SZ,300576.SZ,300655.SZ,300666.SZ,300706.SZ,600160.SH,600206.SH,600378.SH,600703.SH,603026.SH,603078.SH,603688.SH,603931.SH,603938.SH,605358.SH,688019.SH,688106.SH,688126.SH,688233.SH,688268.SH,688300.SH")

baijiu = data_capture("000568.SZ,000596.SZ,000799.SZ,000858.SZ,000860.SZ,002304.SZ,002646.SZ,600197.SH,600199.SH,600519.SH,600559.SH,600702.SH,600779.SH,600809.SH,603198.SH,603369.SH,603589.SH,603919.SH")

baimagu = data_capture("000001.SZ,000028.SZ,000034.SZ,000157.SZ,000333.SZ,000338.SZ,000513.SZ,000538.SZ,000568.SZ,000596.SZ,000651.SZ,000776.SZ,000858.SZ,000895.SZ,000938.SZ,001872.SZ,002001.SZ,002007.SZ,002032.SZ,002138.SZ,002142.SZ,002202.SZ,002223.SZ,002236.SZ,002242.SZ,002262.SZ,002271.SZ,002299.SZ,002304.SZ,002311.SZ,002353.SZ,002373.SZ,002396.SZ,002415.SZ,002463.SZ,002475.SZ,002508.SZ,002555.SZ,002557.SZ,002624.SZ,002705.SZ,002714.SZ,002727.SZ,002841.SZ,002925.SZ,002938.SZ,002959.SZ,300003.SZ,300014.SZ,300136.SZ,300142.SZ,300271.SZ,300294.SZ,300433.SZ,300628.SZ,600000.SH,600030.SH,600031.SH,600036.SH,600196.SH,600298.SH,600406.SH,600438.SH,600511.SH,600519.SH,600585.SH,600600.SH,600690.SH,600699.SH,600779.SH,600801.SH,600809.SH,600837.SH,600887.SH,600999.SH,601012.SH,601100.SH,601138.SH,601166.SH,601211.SH,601231.SH,601288.SH,601318.SH,601328.SH,601336.SH,601398.SH,601601.SH,601628.SH,601658.SH,601799.SH,601818.SH,601888.SH,601939.SH,601998.SH,603228.SH,603338.SH,603369.SH,603444.SH,603589.SH")

baoxian = data_capture("000333.SZ,000651.SZ,000921.SZ,002032.SZ,002035.SZ,002050.SZ,002242.SZ,002508.SZ,002614.SZ,002677.SZ,002705.SZ,002959.SZ,300824.SZ,300894.SZ,300911.SZ,600690.SH,603355.SH,603579.SH,603868.SH,605117.SH,605336.SH,688793.SH")

chucunqi = data_capture("000016.SZ,000021.SZ,002049.SZ,002185.SZ,002298.SZ,002436.SZ,300042.SZ,300223.SZ,300236.SZ,300302.SZ,300455.SZ,300458.SZ,300857.SZ,600171.SH,600667.SH,603986.SH,688008.SH,688086.SH,688123.SH")

chongdianzhuang = data_capture("000400.SZ,002028.SZ,002227.SZ,002249.SZ,002276.SZ,002334.SZ,002358.SZ,002364.SZ,002441.SZ,002518.SZ,002519.SZ,002533.SZ,002660.SZ,300001.SZ,300040.SZ,300048.SZ,300062.SZ,300141.SZ,300376.SZ,300403.SZ,300471.SZ,300491.SZ,300499.SZ,300510.SZ,300682.SZ,300693.SZ,300713.SZ,300745.SZ,600268.SH,600386.SH,600405.SH,600406.SH,600468.SH,600525.SH,603859.SH")

chuanganqi = data_capture("000988.SZ,002011.SZ,002079.SZ,002156.SZ,002185.SZ,002241.SZ,002338.SZ,002362.SZ,002414.SZ,002456.SZ,300007.SZ,300114.SZ,300275.SZ,300279.SZ,300286.SZ,300322.SZ,300354.SZ,300456.SZ,300493.SZ,300507.SZ,300557.SZ,300667.SZ,300680.SZ,300701.SZ,600460.SH,603005.SH,603662.SH,688002.SH,688286.SH,688665.SH")

chuneng = data_capture("002074.SZ,002335.SZ,002455.SZ,002518.SZ,002580.SZ,002594.SZ,002709.SZ,002733.SZ,002812.SZ,300014.SZ,300037.SZ,300068.SZ,300116.SZ,300207.SZ,300274.SZ,300376.SZ,300438.SZ,300450.SZ,300593.SZ,300693.SZ,300750.SZ,300763.SZ,300827.SZ,300919.SZ,600478.SH,600884.SH,601222.SH,601311.SH,603659.SH,605117.SH,688006.SH,688063.SH,688339.SH,688390.SH,688567.SH")

caozuoxitong = data_capture("000977.SZ,002268.SZ,002368.SZ,002474.SZ,300352.SZ,300353.SZ,300366.SZ,300369.SZ,300379.SZ,300496.SZ,300598.SZ,300659.SZ,600410.SH,600476.SH,600536.SH,600756.SH,600797.SH,603019.SH,688058.SH,688111.SH,688561.SH")

dajijianyangqi = data_capture("601117.SH,601186.SH,601390.SH,601611.SH,601618.SH,601668.SH,601669.SH,601800.SH")

chuangxinyao = data_capture("000513.SZ,000661.SZ,000963.SZ,002007.SZ,002019.SZ,002038.SZ,002262.SZ,002294.SZ,002399.SZ,002422.SZ,002653.SZ,002773.SZ,002821.SZ,300009.SZ,300122.SZ,300142.SZ,300238.SZ,300347.SZ,300357.SZ,300558.SZ,300601.SZ,300725.SZ,300759.SZ,300841.SZ,600079.SH,600196.SH,600267.SH,600276.SH,600380.SH,600535.SH,600739.SH,600867.SH,601607.SH,603087.SH,603127.SH,603259.SH,603456.SH,603858.SH,688166.SH,688177.SH,688185.SH,688202.SH,688222.SH,688321.SH,688505.SH,688520.SH")

erxianlongtou = data_capture("000012.SZ,000050.SZ,000400.SZ,000422.SZ,000636.SZ,000902.SZ,000933.SZ,000988.SZ,002028.SZ,002030.SZ,002056.SZ,002138.SZ,002212.SZ,002244.SZ,002245.SZ,002312.SZ,002384.SZ,002408.SZ,002430.SZ,002541.SZ,002557.SZ,002585.SZ,002603.SZ,002939.SZ,002978.SZ,300171.SZ,300373.SZ,300418.SZ,300618.SZ,300677.SZ,300737.SZ,600060.SH,600079.SH,600299.SH,600392.SH,600549.SH,600596.SH,600707.SH,600746.SH,600764.SH,601168.SH,601231.SH,601555.SH,601677.SH,603606.SH,603678.SH,603733.SH,603939.SH,688139.SH")

fengdianneng = data_capture("000791.SZ,000862.SZ,000958.SZ,002080.SZ,002202.SZ,002204.SZ,002487.SZ,002531.SZ,300129.SZ,300169.SZ,300185.SZ,300443.SZ,300569.SZ,300690.SZ,300772.SZ,300850.SZ,600163.SH,600458.SH,600483.SH,600821.SH,600875.SH,600905.SH,601016.SH,601218.SH,601615.SH,601619.SH,603218.SH,603507.SH,603606.SH,603693.SH,603985.SH,688660.SH")

guangkejiao = data_capture("002326.SZ,002409.SZ,300236.SZ,300346.SZ,300398.SZ,300429.SZ,300537.SZ,300576.SZ,300655.SZ,603078.SH,603306.SH,603650.SH,688630.SH")

gongyehuanlianwang = data_capture("000063.SZ,000333.SZ,000425.SZ,000977.SZ,002184.SZ,002232.SZ,002268.SZ,002313.SZ,002368.SZ,002380.SZ,002410.SZ,002912.SZ,300024.SZ,300083.SZ,300098.SZ,300124.SZ,300161.SZ,300166.SZ,300170.SZ,300205.SZ,300213.SZ,300276.SZ,300353.SZ,300369.SZ,300378.SZ,300383.SZ,300454.SZ,300456.SZ,300532.SZ,300607.SZ,300687.SZ,600031.SH,600050.SH,600588.SH,600690.SH,600845.SH,600990.SH,601138.SH,601238.SH,603083.SH,603236.SH,603337.SH,603859.SH,688060.SH,688080.SH,688100.SH")

huchenghe = data_capture("000002.SZ,000028.SZ,000039.SZ,000066.SZ,000069.SZ,000078.SZ,000100.SZ,000157.SZ,000338.SZ,000425.SZ,000488.SZ,000513.SZ,000538.SZ,000617.SZ,000623.SZ,000651.SZ,000661.SZ,000726.SZ,000858.SZ,000876.SZ,000895.SZ,000932.SZ,000938.SZ,000963.SZ,000999.SZ,001872.SZ,001965.SZ,001979.SZ,002001.SZ,002007.SZ,002013.SZ,002019.SZ,002024.SZ,002078.SZ,002091.SZ,002110.SZ,002146.SZ,002179.SZ,002202.SZ,002236.SZ,002304.SZ,002311.SZ,002352.SZ,002373.SZ,002415.SZ,002422.SZ,002475.SZ,002563.SZ,002572.SZ,002608.SZ,002831.SZ,300003.SZ,300015.SZ,300498.SZ,600009.SH,600011.SH,600018.SH,600019.SH,600021.SH,600023.SH,600025.SH,600028.SH,600029.SH,600031.SH,600036.SH,600048.SH,600056.SH,600062.SH,600085.SH,600104.SH,600115.SH,600153.SH,600161.SH,600196.SH,600236.SH,600271.SH,600276.SH,600282.SH,600309.SH,600332.SH,600340.SH,600350.SH,600352.SH,600376.SH,600377.SH,600380.SH,600383.SH,600398.SH,600406.SH,600420.SH,600436.SH,600482.SH,600511.SH,600516.SH,600519.SH,600535.SH,600566.SH,600567.SH,600585.SH,600588.SH,600606.SH,600612.SH,600642.SH,600655.SH,600673.SH,600674.SH,600703.SH,600704.SH,600710.SH,600739.SH,600741.SH,600754.SH,600755.SH,600760.SH,600782.SH,600795.SH,600801.SH,600828.SH,600867.SH,600886.SH,600887.SH,600893.SH,600900.SH,600987.SH,600998.SH,601006.SH,601012.SH,601018.SH,601088.SH,601111.SH,601155.SH,601186.SH,601288.SH,601318.SH,601360.SH,601390.SH,601398.SH,601601.SH,601607.SH,601628.SH,601668.SH,601727.SH,601766.SH,601800.SH,601857.SH,601877.SH,601888.SH,601899.SH,601919.SH,601939.SH,601985.SH,601988.SH,601991.SH,601992.SH,603816.SH,603833.SH,603858.SH,603993.SH")

hangmu = data_capture("000547.SZ,000738.SZ,000768.SZ,002013.SZ,002446.SZ,002465.SZ,300034.SZ,300397.SZ,300424.SZ,300581.SZ,300775.SZ,600038.SH,600072.SH,600118.SH,600150.SH,600184.SH,600316.SH,600372.SH,600391.SH,600435.SH,600562.SH,600685.SH,600760.SH,600765.SH,600879.SH,600893.SH,600990.SH,601890.SH,601989.SH")

jisuanjishijue = data_capture("002184.SZ,002189.SZ,002338.SZ,002362.SZ,002415.SZ,300098.SZ,300112.SZ,300177.SZ,300307.SZ,300382.SZ,300400.SZ,300479.SZ,300790.SZ,300802.SZ,600288.SH,600699.SH,603203.SH,603901.SH,688001.SH,688003.SH,688010.SH,688088.SH,688686.SH")

jinrongkeji = data_capture("000555.SZ,000889.SZ,000948.SZ,000977.SZ,000997.SZ,002017.SZ,002065.SZ,002104.SZ,002152.SZ,002177.SZ,002195.SZ,002197.SZ,002268.SZ,002316.SZ,002368.SZ,002410.SZ,002439.SZ,002453.SZ,002537.SZ,002657.SZ,002987.SZ,300033.SZ,300059.SZ,300077.SZ,300085.SZ,300130.SZ,300202.SZ,300205.SZ,300248.SZ,300290.SZ,300297.SZ,300300.SZ,300330.SZ,300333.SZ,300339.SZ,300348.SZ,300352.SZ,300368.SZ,300369.SZ,300377.SZ,300380.SZ,300386.SZ,300399.SZ,300465.SZ,300468.SZ,300541.SZ,300551.SZ,300674.SZ,300872.SZ,600446.SH,600570.SH,601519.SH,603383.SH,688318.SH,688588.SH")

bandaoti = data_capture("002129.SZ,003026.SZ,300236.SZ,300373.SZ,300456.SZ,605358.SH,688126.SH,688233.SH,688396.SH")

jinyinjiance = data_capture("000516.SZ,000710.SZ,002004.SZ,002030.SZ,002118.SZ,002191.SZ,002362.SZ,002581.SZ,002584.SZ,002603.SZ,002605.SZ,300003.SZ,300009.SZ,300016.SZ,300086.SZ,300109.SZ,300146.SZ,300181.SZ,300238.SZ,300244.SZ,300254.SZ,300272.SZ,300306.SZ,300314.SZ,300439.SZ,300639.SZ,300642.SZ,300676.SZ,300685.SZ,600165.SH,600645.SH,600682.SH,603118.SH,603387.SH,603882.SH,688222.SH,688289.SH,688315.SH")

mianshuidian = data_capture("000089.SZ,000501.SZ,000524.SZ,000592.SZ,000796.SZ,002707.SZ,600004.SH,600009.SH,600185.SH,600515.SH,600694.SH,600712.SH,600778.SH,600827.SH,600859.SH,601888.SH,603069.SH")

rengongzhineng = data_capture("000977.SZ,002049.SZ,002065.SZ,002073.SZ,002152.SZ,002184.SZ,002226.SZ,002230.SZ,002253.SZ,002298.SZ,002362.SZ,002415.SZ,300024.SZ,300078.SZ,300188.SZ,300222.SZ,300223.SZ,300229.SZ,300307.SZ,300400.SZ,300418.SZ,300458.SZ,300474.SZ,300479.SZ,300613.SZ,600410.SH,600570.SH,600728.SH,600756.SH,600797.SH,601360.SH,603019.SH,603893.SH,688088.SH,688256.SH")

shipinjiagong = data_capture("000895.SZ,001215.SZ,002216.SZ,002507.SZ,002557.SZ,002597.SZ,002695.SZ,002726.SZ,002847.SZ,002946.SZ,002956.SZ,002991.SZ,003000.SZ,300146.SZ,300783.SZ,300791.SZ,300858.SZ,300908.SZ,300915.SZ,300973.SZ,600305.SH,600597.SH,600872.SH,600882.SH,600887.SH,603027.SH,603043.SH,603288.SH,603317.SH,603345.SH,603517.SH,603719.SH,603755.SH,603866.SH,603886.SH,605089.SH,605300.SH,605338.SH,605339.SH,688089.SH")

tesla = data_capture("000009.SZ,000700.SZ,000887.SZ,000970.SZ,000988.SZ,002036.SZ,002048.SZ,002050.SZ,002055.SZ,002056.SZ,002085.SZ,002101.SZ,002126.SZ,002160.SZ,002239.SZ,002328.SZ,002382.SZ,002384.SZ,002405.SZ,002460.SZ,002497.SZ,002510.SZ,002594.SZ,002623.SZ,002635.SZ,002664.SZ,002666.SZ,002823.SZ,300037.SZ,300088.SZ,300134.SZ,300160.SZ,300230.SZ,300328.SZ,300382.SZ,300433.SZ,300707.SZ,300750.SZ,600114.SH,600330.SH,600335.SH,600480.SH,600525.SH,600699.SH,600848.SH,600885.SH,601689.SH,603009.SH,603026.SH,603066.SH,603197.SH,603305.SH,603348.SH,603358.SH,603730.SH,603920.SH")

tiwaizhenduan = data_capture("000518.SZ,002022.SZ,002030.SZ,002643.SZ,300003.SZ,300009.SZ,300109.SZ,300165.SZ,300206.SZ,300244.SZ,300289.SZ,300298.SZ,300396.SZ,300406.SZ,300463.SZ,300482.SZ,300639.SZ,300642.SZ,300676.SZ,300760.SZ,300832.SZ,600351.SH,600380.SH,600645.SH,601010.SH,603108.SH,603387.SH,603392.SH,603658.SH,603716.SH,688068.SH,688289.SH,688298.SH,688317.SH,688338.SH,688389.SH,688393.SH,688399.SH,688468.SH,688606.SH,688656.SH")

wanghongjingji = data_capture("000882.SZ,002094.SZ,002103.SZ,002127.SZ,002291.SZ,002292.SZ,002328.SZ,002397.SZ,002400.SZ,002494.SZ,002517.SZ,002624.SZ,002640.SZ,002655.SZ,002712.SZ,002717.SZ,002803.SZ,002878.SZ,300051.SZ,300113.SZ,300133.SZ,300144.SZ,300251.SZ,300336.SZ,300413.SZ,300418.SZ,300494.SZ,300603.SZ,300624.SZ,300740.SZ,300785.SZ,300792.SZ,600088.SH,600556.SH,600576.SH,600633.SH,600637.SH,603466.SH,603557.SH,603598.SH,603630.SH,603721.SH,603729.SH")

wurenjiashi = data_capture("000625.SZ,000851.SZ,000868.SZ,002036.SZ,002055.SZ,002151.SZ,002232.SZ,002236.SZ,002273.SZ,002284.SZ,002313.SZ,002355.SZ,002373.SZ,002383.SZ,002405.SZ,002414.SZ,002415.SZ,002446.SZ,002456.SZ,002465.SZ,002590.SZ,002594.SZ,002635.SZ,002813.SZ,002869.SZ,002906.SZ,002920.SZ,002970.SZ,300088.SZ,300098.SZ,300100.SZ,300177.SZ,300212.SZ,300219.SZ,300304.SZ,300339.SZ,300433.SZ,300496.SZ,300546.SZ,300552.SZ,300579.SZ,300585.SZ,300590.SZ,300638.SZ,300742.SZ,300807.SZ,300928.SZ,300978.SZ,600006.SH,600104.SH,600166.SH,600418.SH,600686.SH,600699.SH,600718.SH,600733.SH,600741.SH,601127.SH,601238.SH,601633.SH,601689.SH,601799.SH,601965.SH,603023.SH,603160.SH,603197.SH,603236.SH,603596.SH,603786.SH,603788.SH,605005.SH,688088.SH,688208.SH,688288.SH,688667.SH")

xiangcunzhenxing = data_capture("000157.SZ,000713.SZ,002215.SZ,002890.SZ,300021.SZ,300022.SZ,300159.SZ,600313.SH,600805.SH,601038.SH,603766.SH,603789.SH")



def stock_list():
    species = [FiveG, alibaba, baodaoticailiao, baijiu, baimagu, baoxian, chucunqi,
               chongdianzhuang, chuanganqi, chuneng, caozuoxitong, dajijianyangqi, chuangxinyao, erxianlongtou, fengdianneng,
               guangkejiao, gongyehuanlianwang, huchenghe, hangmu, jisuanjishijue, jinrongkeji, bandaoti, jinyinjiance,
               rengongzhineng, shipinjiagong, tesla, tiwaizhenduan, wanghongjingji, wurenjiashi, xiangcunzhenxing]
    speciesName = ["5G", "alibaba", "半导体材料", "白酒", "白马股", "保险", "储存器", "充电桩", "传感器", "储能", "操作系统", "大基建央企", "创新药", "二线龙头",
                   "风力电能", "光刻胶", "工业互联网", "国家护城河系列", "航母", "计算机视觉", "金融科技", "半导体", "基因检测",
                   "人工智能", "食品加工", "tesla", "体外检测",
                   "网红经济", "无人驾驶", "乡村振兴"]
    return species, speciesName

def graph_generating(data_name, result_show):
    # z = to_matrix(tab_name,8)
    z = to_matrix(data_name, 6)
    hover = to_matrix(result_show, 6)
    colorscale = [[0, 'green'], [0.5, 'rgb (255,228,225)'], [1, "rgb (165, 42, 42)"]]
    font_colors = ['white', 'black']
    fig = ff.create_annotated_heatmap(z, annotation_text=hover, text=hover, colorscale=colorscale,
                                      font_colors=['black'], hoverinfo='text', xgap=0.5, ygap=0.5)

    fig.update_layout(title={
        'text': "概念股晴雨表",
        'y': 0.96,
        'x': 0.5,
        'xanchor': 'center',
        'yanchor': 'top'}, width=1300, height=1300, title_font_size=50, font_size=18)
    # scatter_options={'marker': {'symbol': 'circle'}}, width=700)
    fig.write_image("/Users/19723/Desktop/20220112.png")

if __name__ == '__main__':
    tab_name = []
    data_name = []
    # 修改显示参数
    data_name1 = []
    result_show = []

    species = stock_list()[0]
    speciesName = stock_list()[1]


    zip_object = zip(species, speciesName)
    for i, j in zip_object:
        tab_name.append(j)
        temp = type_change(i)
        market_total = temp["总市值"].sum()
        temp["market_Cap"] = temp["总市值"] / market_total
        temp["pct_result"] = temp["涨跌幅"] * temp["market_Cap"]
        data_name.append(temp["pct_result"].sum())


    for i in data_name:
        i = i / 100
        data_name1.append("{:.2%}".format(i))

    for i in range(0, 30):
        result_show.append(tab_name[i] + "\n" + str(data_name1[i]))

    graph_generating(data_name, result_show)


